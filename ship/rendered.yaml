apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: mutators.kubedb.com
webhooks:
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/elasticsearches
  failurePolicy: Fail
  name: elasticsearch.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - elasticsearches
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/postgreses
  failurePolicy: Fail
  name: postgres.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - postgreses
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/mysqls
  failurePolicy: Fail
  name: mysql.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - mysqls
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/perconaxtradbs
  failurePolicy: Fail
  name: perconaxtradb.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - perconaxtradbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/mongodbs
  failurePolicy: Fail
  name: mongodb.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - mongodbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/redises
  failurePolicy: Fail
  name: redis.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - redises
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/memcacheds
  failurePolicy: Fail
  name: memcached.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - memcacheds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/etcds
  failurePolicy: Fail
  name: etcd.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - etcds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/pgbouncers
  failurePolicy: Fail
  name: pgbouncer.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - pgbouncers
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/proxysqls
  failurePolicy: Fail
  name: proxysql.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxysqls
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: validators.kubedb.com
webhooks:
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/elasticsearches
  failurePolicy: Fail
  name: elasticsearch.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - elasticsearches
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/postgreses
  failurePolicy: Fail
  name: postgres.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - postgreses
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/mysqls
  failurePolicy: Fail
  name: mysql.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - mysqls
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/perconaxtradbs
  failurePolicy: Fail
  name: perconaxtradb.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - perconaxtradbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/mongodbs
  failurePolicy: Fail
  name: mongodb.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - mongodbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/redises
  failurePolicy: Fail
  name: redis.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - redises
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/memcacheds
  failurePolicy: Fail
  name: memcached.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - memcacheds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/etcds
  failurePolicy: Fail
  name: etcd.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - etcds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/pgbouncers
  failurePolicy: Fail
  name: pgbouncer.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - pgbouncers
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/proxysqls
  failurePolicy: Fail
  name: proxysql.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - proxysqls
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/namespaces
  failurePolicy: Fail
  name: namespace.validators.kubedb.com
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - '*'
    operations:
    - DELETE
    resources:
    - namespaces
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: appscode:appcatalog:admin
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: appscode:appcatalog:view
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: kubedb:core:admin
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: kubedb:core:edit
rules:
- apiGroups:
  - kubedb.com
  resources:
  - '*'
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - catalog.kubedb.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: kubedb:core:view
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  name: kubedb:garbage-collector:psp
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - patch
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - delete
  - get
  - list
  - watch
  - patch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - patch
  - deletecollection
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs:
  - create
  - delete
  - get
  - patch
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - patch
  - deletecollection
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - deletecollection
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - authorization.kubedb.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - policy
  resourceNames:
  - kubedb
  - elasticsearch-db
  - etcd-db
  - memcached-db
  - mongodb-db
  - mysql-db
  - percona-xtradb-db
  - postgres-db
  - redis-db
  - proxysql-db
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - deletecollection
- apiGroups:
  - stash.appscode.com
  resources:
  - restoresessions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-apiserver-extension-server-authentication-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-apiserver-auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  name: kubedb:garbage-collector:psp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRS0xBemROZnMrWTh0TU40akx3VTJPakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURBNE1qa3hNVEF3TkRsYUZ3MHpNREE0TWpjeE1UQXdORGxhTUJFeApEekFOQmdOVkJBTVRCbXQxWW1Wa1lqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCCkFLZHZDVFpVUTlBalBMWFlFTFgyaWpQY1NRQWMrWXl5NVVGa1RyZU91YWJWUXY3djdWdW44T2tzYnFjWDFOOXIKWTR0OFNZcGxKa2E0eEtDTmU5WWx0RXkraE9NamdqemxGVHVNdGF3RG92OGFVWEdkNERreHl6bGRhOTZqbTlWegpmS1NaKzZsU3dhanUzVlZ4YVI5Z1lZaXRwTGxnMnI0dnFRUG1tanRzVXdnaEIxNDZLd0F3dTFSSnhNQ2RGOUdQCkRzSTgzQmgyZkgrWjZrQ1FsTjBURHI5dENxcU4wREF1aVpRd2w3c1BsUHJJVi9SQi9YWHRSRVhLRTdCc3pEYVoKNTdZZWdtc29Gbk9JNjhLcExTVVJiRDhWU3ZwSmU4MEsyb2NoQTdWS3dsKzIrQTZteWtHSWlSdmxIemJrTmZ5MAp5RGkraWhwMTlxNDNPbS9CcnRjSE9wRUNBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkCkpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQzBHQTFVZEVRUW0KTUNTQ0RtdDFZbVZrWWk1a1pXWmhkV3gwZ2hKcmRXSmxaR0l1WkdWbVlYVnNkQzV6ZG1Nd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBQW5RTG44R0pDdkgrSk10NjFMbE5WZG5xYXE5VUdQekxZam1DWnFBcXNkNUVLNEU4RDhVCjl6bUFQNFpCVkFjUktxNEQ3OFJVdHAxMFAzdUNOMXU1RDhPQ0xXdEYvbTQ3RTR6KzdLVWlxRDBlVldGQXFzSkoKSys4d25KSG1aaDZpTmZlMXQzSHJVbHNqVEZTRnlhYlhZcDVNYzJEKzMvcGRJU1A2WXQ5U3lFcys5dkNWeVAxcgp1azRLeGZSVEYxQmN0N1RSTm1UcGd5STlDRDVUSWlyc0Fhc3VkR2JlNlkrYVM0UUhldzNYcXdTMUhXMHBvaFZVCmxyTmlvNEg2NVVRUXoxSHp0S2ZreDFVQXI0RVY0cHlnMHJrekxNVmJJZFZOendCK3RuYzZWY2lLZk9pRHZVRUgKZWVCYnB3WThUczUvckJmVmdvUDM3QVlaUUh6OW1teFpCTWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcDI4Sk5sUkQwQ004dGRnUXRmYUtNOXhKQUJ6NWpMTGxRV1JPdDQ2NXB0VkMvdS90Clc2Znc2U3h1cHhmVTMydGppM3hKaW1VbVJyakVvSTE3MWlXMFRMNkU0eU9DUE9VVk80eTFyQU9pL3hwUmNaM2cKT1RITE9WMXIzcU9iMVhOOHBKbjdxVkxCcU83ZFZYRnBIMkJoaUsya3VXRGF2aStwQSthYU8yeFRDQ0VIWGpvcgpBREM3VkVuRXdKMFgwWThPd2p6Y0dIWjhmNW5xUUpDVTNSTU92MjBLcW8zUU1DNkpsRENYdXcrVStzaFg5RUg5CmRlMUVSY29Uc0d6TU5wbm50aDZDYXlnV2M0anJ3cWt0SlJGc1B4Vksra2w3elFyYWh5RUR0VXJDWDdiNERxYksKUVlpSkcrVWZOdVExL0xUSU9MNktHblgycmpjNmI4R3Uxd2M2a1FJREFRQUJBb0lCQUNQUUtrWkdxK0tmUnVNVwpmaXlOdVczeVZtTUJ6NWI2eFBMQnc5eWJXTGFJc3pYWW1BcWMxM2pvbWhwL2pIYmxmM3RjY0ZaNzRENE1VM0tNCkVNcnpjYWRnc1Fmc2xuVDBBeUNqcmxCR3p0eUdBcG1zelVNdWxXdUZ3Z2J6TStmcU5lVDNVczhhOW5WdDhrWE8KWmsvaHk3cnllV04xaGhSY0dXak9NSHM1Wm1FOFpvNHJXdVhjQjV2SCtiMFQwRXVWa1J4U2lkUG9Pb0NldE9hSApzNzM0Y25wNnRDUE9Cb3BJUExSR3hsYnlaSHZpL0ZzcFZGb250MGtrL1lOeHNLU0FVYklPNDltcGI2b2tmWUtJCkV4Zmp1WVZ2ODFaeklkb2FRSW1tZ1kxU0FjVSt1UElvRFVmeWlOVUpSakZxdVpQdE1Tb0RxVEMxU2pQU0R2cTQKS3B4clcya0NnWUVBd00vWGV3clNKVk1URUVSajFVc1ZlQUhQK0VDWERBL1FWNXhKNUlpajVMTVRDOEh5a202eApNQzFDL2V1ZEJBVVFNZXdocE9aSzgxZTBMdmo2dEJoaXBvak1MdDN0bFhrYmV4QmlvODRNeFRIb3ZxaXFwRHhHCkkwWE4zVS9vdmdDNWt6RmQ5WjFyQ3phOU1MTU9RVkhaWUhpN2J0UmtxNEwvSC9yOXJKYkZhZXNDZ1lFQTNrNFIKU3BTMWMydGwzZXZad29TZFhzTDlES0lJNHhKTW1FZkpBTXlZcGRscU00ZjFxMldMR2RjUldOYWhKVFVpcjUzaAo1ZUkyOGNTZ0RiQnBONWsvekRnRE4wN2s4SFZuRGdadmZMMVlSSTl1RHhHeHJ1UW00Y1Y4NENCSllUR0NBc2UzCmdwSVRVdUNOVFJuSjJSUmN0KytOU3dwOHhMME9mTVFLRXpBS2NuTUNnWUFVMUY5TEE1aEFRQUZIT0p3d1pyUWoKQ3M4VTJxVjJ3QjZaMkdDRE45Kzh6VHU1Z1hKYkwyb2s4ajdTZjZtdXpYMDZaM0FiQ0dZQWMvRWJRZnFUaWk3ZQpIdGt3RnZtYnRFR3J3ZEZtTU5SZ1dVdnpqUFVpV1FDYXZ1ZkdpT056NDFBby9xUlA3SG1yOUhYcjFPd3RVbEpSCmdibDk5NlFJZzFaY2Roa0JsQ2d2a1FLQmdRQ2pGR2dRNjBpMVZDc1ZndWhyanplWEJibjNJNE1iZVJnaGVqL1YKUzBJTUlKT05IQWMzNWpVR0RzVFdCQldSSXdyQUJEVnNtK2Vzc282cm5DZUR0dk9iVDlma0lnZEc4d2xYdTViYgp6bGRMYkdEVHd5b3kzNEk2aTlMUTVENlFnMjRadGdORVVQN0dCSjhEMlpBK3BIWmtKT0xsRXR0MnhDNDFqdWJKCkxxdnJTd0tCZ0d6cVZYYUpueFJybGpRTkNhUmg2Wjk3UTRyNHdvempjaDdlbFU3Y3ltaVRHSGhGNlRDTkpURDIKVUh5QTd1YzdZWllhQnAwb2piY08vN1V4TjlsWTZRKzNwSm41aWdsVmZyZy9XV2E2dFlXM21tcUgrQU02VEZnMgoydGxkaGV2TjlYOUlPOW1mN1hpZFhpdVE0Zmh4SUFQMmoycEdHZFVSU3FpRG1OWTZrbit4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-apiserver-cert
  namespace: default
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
  namespace: default
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/name: kubedb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubedb
      app.kubernetes.io/name: kubedb
  template:
    metadata:
      annotations:
        checksum/apiregistration.yaml: ed9218ed23c7cd61e3349a227562cda0f7e353cf58d1e196f592b964e312f9c3
      labels:
        app.kubernetes.io/instance: kubedb
        app.kubernetes.io/name: kubedb
    spec:
      containers:
      - args:
        - run
        - --v=3
        - --governing-service=kubedb
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: kubedb/operator:v0.14.0-beta.1
        imagePullPolicy: IfNotPresent
        name: operator
        ports:
        - containerPort: 8443
          name: operator
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
      securityContext: {}
      serviceAccountName: kubedb
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubedb-apiserver-cert
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: v1alpha1.mutators.kubedb.com
spec:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQWM2Z0F3SUJBZ0lRWEllZ281WWQramFMSUVsS1hIYVkvakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURBNE1qa3hNVEF3TkRsYUZ3MHpNREE0TWpjeE1UQXdORGxhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxV1FrClZ6WVhVUDdOT2orVWVVVFltdlRUeDdmK2dWTVlQa0NKbElTcFlKQzE3MURhaEJqVS9NN0FXbWd3SWJQeXR3VFIKRHhWOU95VlA1UnhiYXd3bVRjR0NpNWNoSy8ydG1iOS9xRktoUlJkZ2Q4Wjd1VUJlNkpvajdieGM3WEtyVk9oVAppREEwTVpoakpkRHowdGtRMWFKdFdpYkZpMDNMNzVkRUdqc3NseXl1dUw2MnJ5bUJlVnlRLzdtWWw1UjV4RXJxCkcwQ3NvUXJUS3MrNEJmdGRTM09HYVQxMDVrNnYrbGVaaWpkR29OM3VpK1VqT3NBdFkySVFtSWxNUnVMeVUvUjMKQWdYaCtMYnZSM2s0d1A2c1VXVFdWS0E5bDZnWHRaekVsa0dXMkR1N1dxcmZhMjlHTmczZ0FSUW9TdnEzeFcxbQppdE9EUjE2MDhHdHVTb2tHaVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUoxQ1ZxSkRvbFRBVWZGRGVGUm90MkVNZVRWaERiL0JNRzdtSWNidHVqTUxUZWNiM2wzRwo5WGVMZmU0enVmektHWVVqTnN1RDhzZUZJejdxT0ZVbkY5ejl6TVd0bW1uM01RMlE5VndESE1EUkVtOGZ3REZhCjBJNyt1aHhlZy9nZ2V3NC85OWl2Y1VkR01zdVRlWTA4cm5hTDBEbUZmR1VtWWJRT25ZK0U1T1lXSmx1bjg1S1cKeVZaSTNyT1FxL0xvTXFpVXV5VWVuTUFkRGUxZ1QyRUhDZHAvazhFRmlTb3NndTRHeHJnOTc5S2JUQURsenQzQQoxNkdnRmVZc2NqdDNQM3pvSVpKcTQyb2JnaHBMK1g5cTNwRnR0THZNMDkwRkNtNEV6SUxoR1c3bU1VTVlPUXN3Cndad1drbWIzVWxhY0dOSHMrUEcxc1NHTHVTa1JvQVJmU3JZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  group: mutators.kubedb.com
  groupPriorityMinimum: 10000
  service:
    name: kubedb
    namespace: default
  version: v1alpha1
  versionPriority: 15
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: v1alpha1.validators.kubedb.com
spec:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQWM2Z0F3SUJBZ0lRWEllZ281WWQramFMSUVsS1hIYVkvakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURBNE1qa3hNVEF3TkRsYUZ3MHpNREE0TWpjeE1UQXdORGxhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxV1FrClZ6WVhVUDdOT2orVWVVVFltdlRUeDdmK2dWTVlQa0NKbElTcFlKQzE3MURhaEJqVS9NN0FXbWd3SWJQeXR3VFIKRHhWOU95VlA1UnhiYXd3bVRjR0NpNWNoSy8ydG1iOS9xRktoUlJkZ2Q4Wjd1VUJlNkpvajdieGM3WEtyVk9oVAppREEwTVpoakpkRHowdGtRMWFKdFdpYkZpMDNMNzVkRUdqc3NseXl1dUw2MnJ5bUJlVnlRLzdtWWw1UjV4RXJxCkcwQ3NvUXJUS3MrNEJmdGRTM09HYVQxMDVrNnYrbGVaaWpkR29OM3VpK1VqT3NBdFkySVFtSWxNUnVMeVUvUjMKQWdYaCtMYnZSM2s0d1A2c1VXVFdWS0E5bDZnWHRaekVsa0dXMkR1N1dxcmZhMjlHTmczZ0FSUW9TdnEzeFcxbQppdE9EUjE2MDhHdHVTb2tHaVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUoxQ1ZxSkRvbFRBVWZGRGVGUm90MkVNZVRWaERiL0JNRzdtSWNidHVqTUxUZWNiM2wzRwo5WGVMZmU0enVmektHWVVqTnN1RDhzZUZJejdxT0ZVbkY5ejl6TVd0bW1uM01RMlE5VndESE1EUkVtOGZ3REZhCjBJNyt1aHhlZy9nZ2V3NC85OWl2Y1VkR01zdVRlWTA4cm5hTDBEbUZmR1VtWWJRT25ZK0U1T1lXSmx1bjg1S1cKeVZaSTNyT1FxL0xvTXFpVXV5VWVuTUFkRGUxZ1QyRUhDZHAvazhFRmlTb3NndTRHeHJnOTc5S2JUQURsenQzQQoxNkdnRmVZc2NqdDNQM3pvSVpKcTQyb2JnaHBMK1g5cTNwRnR0THZNMDkwRkNtNEV6SUxoR1c3bU1VTVlPUXN3Cndad1drbWIzVWxhY0dOSHMrUEcxc1NHTHVTa1JvQVJmU3JZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  group: validators.kubedb.com
  groupPriorityMinimum: 10000
  service:
    name: kubedb
    namespace: default
  version: v1alpha1
  versionPriority: 15
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-cleaner
  namespace: default
spec:
  activeDeadlineSeconds: 120
  backoffLimit: 3
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - sleep 2; kubectl delete validatingwebhookconfigurations validators.kubedb.com || true; kubectl delete mutatingwebhookconfiguration mutators.kubedb.com || true; kubectl delete apiservice v1alpha1.mutators.kubedb.com || true; kubectl delete apiservice v1alpha1.validators.kubedb.com || true;
        image: appscode/kubectl:v1.16
        imagePullPolicy: IfNotPresent
        name: busybox
      restartPolicy: Never
      serviceAccountName: kubedb
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
spec:
  allowPrivilegeEscalation: true
  allowedCapabilities:
  - IPC_LOCK
  - SYS_RESOURCE
  fsGroup:
    rule: RunAsAny
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
