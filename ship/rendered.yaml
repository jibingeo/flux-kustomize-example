apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: mutators.kubedb.com
webhooks:
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/elasticsearches
  failurePolicy: Fail
  name: elasticsearch.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - elasticsearches
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/postgreses
  failurePolicy: Fail
  name: postgres.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - postgreses
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/mysqls
  failurePolicy: Fail
  name: mysql.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - mysqls
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/perconaxtradbs
  failurePolicy: Fail
  name: perconaxtradb.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - perconaxtradbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/mongodbs
  failurePolicy: Fail
  name: mongodb.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - mongodbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/redises
  failurePolicy: Fail
  name: redis.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - redises
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/memcacheds
  failurePolicy: Fail
  name: memcached.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - memcacheds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/etcds
  failurePolicy: Fail
  name: etcd.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - etcds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/pgbouncers
  failurePolicy: Fail
  name: pgbouncer.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - pgbouncers
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/proxysqls
  failurePolicy: Fail
  name: proxysql.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxysqls
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: validators.kubedb.com
webhooks:
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/elasticsearches
  failurePolicy: Fail
  name: elasticsearch.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - elasticsearches
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/postgreses
  failurePolicy: Fail
  name: postgres.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - postgreses
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/mysqls
  failurePolicy: Fail
  name: mysql.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - mysqls
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/perconaxtradbs
  failurePolicy: Fail
  name: perconaxtradb.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - perconaxtradbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/mongodbs
  failurePolicy: Fail
  name: mongodb.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - mongodbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/redises
  failurePolicy: Fail
  name: redis.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - redises
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/memcacheds
  failurePolicy: Fail
  name: memcached.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - memcacheds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/etcds
  failurePolicy: Fail
  name: etcd.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - etcds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/pgbouncers
  failurePolicy: Fail
  name: pgbouncer.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - pgbouncers
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/proxysqls
  failurePolicy: Fail
  name: proxysql.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - proxysqls
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/namespaces
  failurePolicy: Fail
  name: namespace.validators.kubedb.com
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - '*'
    operations:
    - DELETE
    resources:
    - namespaces
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: appscode:appcatalog:admin
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: appscode:appcatalog:view
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: kubedb:core:admin
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: kubedb:core:edit
rules:
- apiGroups:
  - kubedb.com
  resources:
  - '*'
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - catalog.kubedb.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: kubedb:core:view
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  name: kubedb:garbage-collector:psp
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - patch
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - delete
  - get
  - list
  - watch
  - patch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - patch
  - deletecollection
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs:
  - create
  - delete
  - get
  - patch
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - patch
  - deletecollection
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - deletecollection
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - authorization.kubedb.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - policy
  resourceNames:
  - kubedb
  - elasticsearch-db
  - etcd-db
  - memcached-db
  - mongodb-db
  - mysql-db
  - percona-xtradb-db
  - postgres-db
  - redis-db
  - proxysql-db
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - deletecollection
- apiGroups:
  - stash.appscode.com
  resources:
  - restoresessions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-apiserver-extension-server-authentication-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-apiserver-auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  name: kubedb:garbage-collector:psp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQU1LUlRMNG04WnVMUlFxWUVMWVoySDB3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpBd09UQXpNRE13TlRBeFdoY05NekF3T1RBeE1ETXdOVEF4V2pBUgpNUTh3RFFZRFZRUURFd1pyZFdKbFpHSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCCkFRREh0eE5QTnFmNW01UlJRRGZ2cUN3eFJmNVlTbmtLTDVRaC9pbnJqeDNONXV4TVZXQWI5eTVTOXVMblExMG0KcU5CMGVXVU9iQzlXeW1pMW9MbnJ3dG1pYm5JNDBVWHowdTVQNi8zT2VvNHBVeGt6WmNZTnFYVzBsTk9zUXBxTQp2V0U1dEluQXo0cHdBNzZXWG9hajJoeEVzNTY1b0dNRjZILzZscHdmQytIbFlTT1QrZVBFRXREZGxkZHlGdmNGCm5RUWJKdk96U1RXSWh6N0dxS2hRTHJZYjlhaU4wMEJlSHdYNWIyVnFkcEdmS1dvV0ZCUWtIZkJoVXdWazV6emwKNTFNL0VOUEp1WXRWaEs1aU55QXFndUpxL2ZDMysxeDNHdG5mRU02K04wTkRyOG9OdWF5RFdEOGRrdTBkaVk0UQplTTh4blpTVmpLZ3g3a1BhejkvYTEyR2hBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WCkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREF0QmdOVkhSRUUKSmpBa2dnNXJkV0psWkdJdVpHVm1ZWFZzZElJU2EzVmlaV1JpTG1SbFptRjFiSFF1YzNaak1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUJ0cFZMZVhrMzdqa2NLWEpGTDBVcXBONkwvdU9qRE9nWDduZUdkYXVpVVhQeTkwT09RCm4zMzg3QS83WEwxVDFPajRBVEFOeklhcVJyUE82dENDQ01pbTM3b2FKYzZNbTB0bUJLV1lhN1ZTam5JS2hSZGsKSGk5MnlCUnB4R09VOUhnMmh1VjVBZ09OQzNhNGZaRVZBelgrREcxSmY2dzhReERVY2QxcEpyTTgwcllMMVl4UQpGZndGSXhjRFBBR1ZuS3RjOHpMU1N2cTZBT1J0UjY2SWJJNGJDcjNMVklZQ3dEaWs1Z29mTVFSbVl3aklsTVNaCm8vV1hyeXhYaDd6L0NGUWU1dHFCdnRDMzQrMllXUDJjWVk2V01IVmlNV3AxNFZTRmYxK0t6SkhMbnJramQxdE0KbVkvanlJQ3lGZUZNSmlvWXFiZDVDZlZLd2hmd2Jyd3ppZ3FlCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeDdjVFR6YW4rWnVVVVVBMzc2Z3NNVVgrV0VwNUNpK1VJZjRwNjQ4ZHplYnNURlZnCkcvY3VVdmJpNTBOZEpxalFkSGxsRG13dlZzcG90YUM1NjhMWm9tNXlPTkZGODlMdVQrdjl6bnFPS1ZNWk0yWEcKRGFsMXRKVFRyRUthakwxaE9iU0p3TStLY0FPK2xsNkdvOW9jUkxPZXVhQmpCZWgvK3BhY0h3dmg1V0Vqay9uagp4QkxRM1pYWGNoYjNCWjBFR3lienMwazFpSWMreHFpb1VDNjJHL1dvamROQVhoOEYrVzlsYW5hUm55bHFGaFFVCkpCM3dZVk1GWk9jODVlZFRQeERUeWJtTFZZU3VZamNnS29MaWF2M3d0L3RjZHhyWjN4RE92amREUTYvS0RibXMKZzFnL0haTHRIWW1PRUhqUE1aMlVsWXlvTWU1RDJzL2YydGRob1FJREFRQUJBb0lCQUF6RmdWK2NjQ3QvTG9IdgpxR1FVRGhkc2tYSlYrTjJVNDFVMUtyc2NvTnhNK3lsNmdEWHBuYlhDZ2dvbC9hditPYTVwSVBSR0tOVFZCdE11Cm54VWJsYzFVWU11UFhualVNVmM5RVRNR0ZWZEJNQ2hnUnNVUzVDc1RKV0lydERSeDIralR5Y2RodmttaGc2dWMKQ2VJcWpZbzdMbGhTa0dLTlZyblFyZFV5YmxTN3Y1d1QzcFgzOFdVQUo2YkdZYVlBTlFCUVFzQnBha3Z1eXN1QwprSGl3cnVHaGd2Y253emZyQk52V3p1YUs0UFUySlhDY1AzaXQyQXlZNlFLQlRFL1NPVHQ0enVCRStiWS84TlJwCnk3NDZ2eTN0MWZCWE02RXhqRys0Nm04NHNlSWErV1paY2xlUXlRbWFJcGFLbVBVNmdVaW9DTjIrb2Y5dWNvQkIKK1dmOVZ3RUNnWUVBNTY2NlFvUms3Zkx1YlVYQWRkbHZVa1NLK1oyeW9oREVQODhTSmR3T1VnaFR1ZU42Ym1MSwo4THZ3Ny9DakI4Si9XQ0RrMkhoV1dNMklTbWIvVUswc2lkeXNXT3Q2aFVzSUpQbUZpWTBYQmVTZ2RuMjlpdURGCkVJNVYrK2U4Y2MrSnIxN0tPc0grSFIwd09kYVFMbytYYlQ1REZtMFBXbW1UMjNHaFdrZG9wNUVDZ1lFQTNLMWoKb09SamR2eGxTR1gvbmtrenJrT0JOK3VzeEYvUHgyeUtXdXJOU0dNRVRRODJTUTEwcDJ2UXdRTzBhcVNWWWx1egppTkxhaTJVUTBTUENQdHduNE13L1VmQUh6akoweGpudFFkUnRiTE9CT0IvbjcvdUtDUUkzWE9Dc09tZ3ZhMHNpCmQ3MmVROUZtNTBkajd0Qy93V24xTDFBcHdmV0hFRmpJU2ZYNXNSRUNnWUVBNFVGeDJSQnVMU2ZnQnlBbFFxKzQKVzIxSERmRDBhRHdUQXRNcW11SzhqYWVJK0JnaXhrYUpkOHZUTXdadERETmZxdWk0ZDN0d3dJQjgvWkhzdEp6YQp5K05oTWtjbzVZWVJFaG9FYXJ0aDRobnFwYW9WYW55bFBUYVdoUWhIb1FRZW93SnZidmVFUVB4TEVrRDZDRHNXCkNHSGJ5bWNZNFZmN0tRWHUwaDdSc3ZFQ2dZQk1IYTVJbDU1TE0wR0lHRTV6L1ZITElOT1lRejBET3YwREQwZ2wKbGVtYXR6U0xrOXlvay9DUnN0bDlTZGJZRmM3RTcxWmNza1haWU5ITklXVmxvekJLRklrZXJRazBNU2tnR21qZwpsUEh0VlhrVHI4V2pmQUtmbXRrWHV4TU16bFRVMEVTaVFwQXRXalFCUUJtVERRT25KZklCRU1obWMxYlQ1NXVtCkR5YkIwUUtCZ1FDMHcrU1NOZVk0VlR5cGVoaUVOSlB3RXFBSzY2eFFSdFB4bVo2WVYySW5WUFRvR29sME9qUmIKZnRjcGs1TVM4Y3dpUUZFUElqcG92MC93bXNWSXFpLzBMQlE3N1NCV3lUOE4wTEczV1JuT2J1enN3bzFqZlcwOAo3S2JPbmNtQUpNWjNMRkF3UkVHcjB6MDR3cU9nVWkxVkZ1bU91dEIzY1kzMGRqdjkwbDdTRlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-apiserver-cert
  namespace: default
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
  namespace: default
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/name: kubedb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubedb
      app.kubernetes.io/name: kubedb
  template:
    metadata:
      annotations:
        checksum/apiregistration.yaml: 41216cec11b9f5508cccf4faa873fc198ece717f257c2ab7416088d47ad5b429
      labels:
        app.kubernetes.io/instance: kubedb
        app.kubernetes.io/name: kubedb
    spec:
      containers:
      - args:
        - run
        - --v=3
        - --governing-service=kubedb
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: kubedb/operator:v0.14.0-beta.1
        imagePullPolicy: IfNotPresent
        name: operator
        ports:
        - containerPort: 8443
          name: operator
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
      securityContext: {}
      serviceAccountName: kubedb
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubedb-apiserver-cert
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: v1alpha1.mutators.kubedb.com
spec:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQWM2Z0F3SUJBZ0lRWmh3L3EwOFdpME5kQUtFZGVCTkRSREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURBNU1ETXdNekExTURGYUZ3MHpNREE1TURFd016QTFNREZhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxYU0rCjVIckNMd0RZdmMxUFpOdkZTN2YzbDBndUlRZjFHSHNDUExQUE5TVS9DZCtwL0E5OHNhVkZFeC9LMzBwdldqZi8KUVMxKzVoYTk4NDMweTJCNXp1ZnV1OW1XM1ZZR3ZBSUExU0Z6SzRkYkhkdUNtL3RDZWNPQ1Y2R3VtY1NzK2l1NgprOCtEVE5EWjYvdTBLZDJwbk1aYzRIMnE5TmwvRGxJbzdIVEZrZzhEZVBtYkE1ZGRDVHo3b1JtTnpUenJ1VWUxClRLb2lVQkZOZmxpSVh0d0dEU1pqeXVXbmM2M2MxSTg5RFJDQ2tOa2wwSVg5TjFyK3NIOEFaT2dNVHFrUHRKZ1cKZStobDlrelBNSTVYbndkQ2twdGFyUnJmZG9oVGNGMEVlOWs1U0dKSnkwekQ0Yk1WRitwRmE4YUV1WHpSMkpPegpzeWtoQUxyRFA2MHY0ZTg3RFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUJFT2pjazlleEVvT2FrMUova3J4eG9iaXN0dVMwdEFmMUVzcW55cVE2aUhLS0ROcGJ4egpYdE1td1dkZVJ2amdSREJKcWl4YTh5aTAxY3Y5T2t5R25LYS95Q1NJN3cvamhPRDA4dW42S2hPMzBsQ01wbjR5CnhtLzlTNjVUUzdZczYwVEljMWFQTDFpZUVEQzkrQnptVHc3OVBGRTBjcmtIU1BTQndGTllaMFV5US96RGJuTnkKckVsenNMSVoya0M3ZlVXRlplVm1KYXd4ZFRmbjZNT2lCZ3ZkMndTcS9JYnI0OUxIMmx0Qk0yV1ErbmlPbXMrZApBVit5US9iaUVyTm1oS1h1K1I1Z1ZRNWtBczJrdWRlVUxMVDg3WTV4NWtvWGhnT1VBZkxqeEdxVGZOV0dkYU9KCkZORDRuTkk1ODM5Z3psYlE1RDY3dTJkYllDbGdBQjhMSDNBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  group: mutators.kubedb.com
  groupPriorityMinimum: 10000
  service:
    name: kubedb
    namespace: default
  version: v1alpha1
  versionPriority: 15
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: v1alpha1.validators.kubedb.com
spec:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQWM2Z0F3SUJBZ0lRWmh3L3EwOFdpME5kQUtFZGVCTkRSREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURBNU1ETXdNekExTURGYUZ3MHpNREE1TURFd016QTFNREZhTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxYU0rCjVIckNMd0RZdmMxUFpOdkZTN2YzbDBndUlRZjFHSHNDUExQUE5TVS9DZCtwL0E5OHNhVkZFeC9LMzBwdldqZi8KUVMxKzVoYTk4NDMweTJCNXp1ZnV1OW1XM1ZZR3ZBSUExU0Z6SzRkYkhkdUNtL3RDZWNPQ1Y2R3VtY1NzK2l1NgprOCtEVE5EWjYvdTBLZDJwbk1aYzRIMnE5TmwvRGxJbzdIVEZrZzhEZVBtYkE1ZGRDVHo3b1JtTnpUenJ1VWUxClRLb2lVQkZOZmxpSVh0d0dEU1pqeXVXbmM2M2MxSTg5RFJDQ2tOa2wwSVg5TjFyK3NIOEFaT2dNVHFrUHRKZ1cKZStobDlrelBNSTVYbndkQ2twdGFyUnJmZG9oVGNGMEVlOWs1U0dKSnkwekQ0Yk1WRitwRmE4YUV1WHpSMkpPegpzeWtoQUxyRFA2MHY0ZTg3RFFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUJFT2pjazlleEVvT2FrMUova3J4eG9iaXN0dVMwdEFmMUVzcW55cVE2aUhLS0ROcGJ4egpYdE1td1dkZVJ2amdSREJKcWl4YTh5aTAxY3Y5T2t5R25LYS95Q1NJN3cvamhPRDA4dW42S2hPMzBsQ01wbjR5CnhtLzlTNjVUUzdZczYwVEljMWFQTDFpZUVEQzkrQnptVHc3OVBGRTBjcmtIU1BTQndGTllaMFV5US96RGJuTnkKckVsenNMSVoya0M3ZlVXRlplVm1KYXd4ZFRmbjZNT2lCZ3ZkMndTcS9JYnI0OUxIMmx0Qk0yV1ErbmlPbXMrZApBVit5US9iaUVyTm1oS1h1K1I1Z1ZRNWtBczJrdWRlVUxMVDg3WTV4NWtvWGhnT1VBZkxqeEdxVGZOV0dkYU9KCkZORDRuTkk1ODM5Z3psYlE1RDY3dTJkYllDbGdBQjhMSDNBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  group: validators.kubedb.com
  groupPriorityMinimum: 10000
  service:
    name: kubedb
    namespace: default
  version: v1alpha1
  versionPriority: 15
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-cleaner
  namespace: default
spec:
  activeDeadlineSeconds: 120
  backoffLimit: 3
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - sleep 2; kubectl delete validatingwebhookconfigurations validators.kubedb.com || true; kubectl delete mutatingwebhookconfiguration mutators.kubedb.com || true; kubectl delete apiservice v1alpha1.mutators.kubedb.com || true; kubectl delete apiservice v1alpha1.validators.kubedb.com || true;
        image: appscode/kubectl:v1.16
        imagePullPolicy: IfNotPresent
        name: busybox
      restartPolicy: Never
      serviceAccountName: kubedb
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
spec:
  allowPrivilegeEscalation: true
  allowedCapabilities:
  - IPC_LOCK
  - SYS_RESOURCE
  fsGroup:
    rule: RunAsAny
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
