apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: mutators.kubedb.com
webhooks:
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/elasticsearches
  failurePolicy: Fail
  name: elasticsearch.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - elasticsearches
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/postgreses
  failurePolicy: Fail
  name: postgres.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - postgreses
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/mysqls
  failurePolicy: Fail
  name: mysql.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - mysqls
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/perconaxtradbs
  failurePolicy: Fail
  name: perconaxtradb.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - perconaxtradbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/mongodbs
  failurePolicy: Fail
  name: mongodb.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - mongodbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/redises
  failurePolicy: Fail
  name: redis.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - redises
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/memcacheds
  failurePolicy: Fail
  name: memcached.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - memcacheds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/etcds
  failurePolicy: Fail
  name: etcd.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - etcds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/pgbouncers
  failurePolicy: Fail
  name: pgbouncer.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - pgbouncers
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/mutators.kubedb.com/v1alpha1/proxysqls
  failurePolicy: Fail
  name: proxysql.mutators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxysqls
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: validators.kubedb.com
webhooks:
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/elasticsearches
  failurePolicy: Fail
  name: elasticsearch.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - elasticsearches
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/postgreses
  failurePolicy: Fail
  name: postgres.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - postgreses
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/mysqls
  failurePolicy: Fail
  name: mysql.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - mysqls
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/perconaxtradbs
  failurePolicy: Fail
  name: perconaxtradb.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - perconaxtradbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/mongodbs
  failurePolicy: Fail
  name: mongodb.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - mongodbs
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/redises
  failurePolicy: Fail
  name: redis.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - redises
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/memcacheds
  failurePolicy: Fail
  name: memcached.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - memcacheds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/etcds
  failurePolicy: Fail
  name: etcd.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - etcds
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/pgbouncers
  failurePolicy: Fail
  name: pgbouncer.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - pgbouncers
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/proxysqls
  failurePolicy: Fail
  name: proxysql.validators.kubedb.com
  rules:
  - apiGroups:
    - kubedb.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - proxysqls
- clientConfig:
    caBundle: bm90LWNhLWNlcnQ=
    service:
      name: kubernetes
      namespace: default
      path: /apis/validators.kubedb.com/v1alpha1/namespaces
  failurePolicy: Fail
  name: namespace.validators.kubedb.com
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - '*'
    operations:
    - DELETE
    resources:
    - namespaces
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: appscode:appcatalog:admin
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: appscode:appcatalog:view
rules:
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: kubedb:core:admin
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: kubedb:core:edit
rules:
- apiGroups:
  - kubedb.com
  resources:
  - '*'
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - catalog.kubedb.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: kubedb:core:view
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  name: kubedb:garbage-collector:psp
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - get
  - patch
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - delete
  - get
  - list
  - watch
  - patch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - patch
  - deletecollection
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  verbs:
  - create
  - delete
  - get
  - patch
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - patch
  - deletecollection
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - deletecollection
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  - authorization.kubedb.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - policy
  resourceNames:
  - kubedb
  - elasticsearch-db
  - etcd-db
  - memcached-db
  - mongodb-db
  - mysql-db
  - percona-xtradb-db
  - postgres-db
  - redis-db
  - proxysql-db
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - deletecollection
- apiGroups:
  - stash.appscode.com
  resources:
  - restoresessions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cert-manager.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-apiserver-extension-server-authentication-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-apiserver-auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
  name: kubedb:garbage-collector:psp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb:garbage-collector:psp
subjects:
- kind: ServiceAccount
  name: generic-garbage-collector
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubedb
subjects:
- kind: ServiceAccount
  name: kubedb
  namespace: default
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGekNDQWYrZ0F3SUJBZ0lSQUlCYVh1WlI4MXRUUUpQT3dwcXFjelF3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTWpBd09UQXpNREUxTXpVeVdoY05NekF3T1RBeE1ERTFNelV5V2pBUgpNUTh3RFFZRFZRUURFd1pyZFdKbFpHSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCCkFRQ3lHK01NZExaKzNhZlcvVWtLUHVLM3czRGxYWDVtVU9vZURTOTJmZ29YalFnTGN4cjNwblNvU2lWYmdzd1EKSGF6Wmd4c3BKRFpLaDMxbDRFc2FQMUg0TllXYmFpbGY2Tmt1SUkrUjUvR1IwSzdvSHh4bEtRMDBuc1dPQmhKVApoak9MQzRNclZTTUlLaG9YUlhISktjTFpGUVZ0M1E1bExOZUdId04vR1NrRGlPbjdOUHI1MmlObHowUDZwcHNSClJxOGNZTGtYanpaZytEKzlrYUpVYStxS2JxcHlvOENFTWRiSEgzZ1lsRE9BekVWeUxhU0duZDFlU2Q4YVFUd0IKclhvaU5Wc1BjQ3pOOU9PT0N2aHdab1lxUVF1NEkydDdySWVJNXRwTmtpZ3BvSVNmenp1ZE5NTytVU2JYSDZxMAplbFNQd2tkeVQvdS9zaTd3ZDBydER5b0xBZ01CQUFHamJqQnNNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WCkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREF0QmdOVkhSRUUKSmpBa2dnNXJkV0psWkdJdVpHVm1ZWFZzZElJU2EzVmlaV1JpTG1SbFptRjFiSFF1YzNaak1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUJ1b0ZDWllkU2xnemhwWmtyV3RYZGk3OXNmOG5tdGZ5cjJxZ0hWOTdiRFNPaVpSUmJGClpEQi9QOWNXdU9JZmp0MDVESk40WWtXTmNEc1RWc3YreU5CRlhHaXVrbGM1UG9GNHhhdTRpUjNtSHVVd3h0Ym4KL004NEFDWlZmVFRYdkl4cWpWQS9NYmVMTE1Sb0VTblkrUFJwSlpaUFJia3pKVWwxdjZ3enkxTnZpOWdaMWc3SApZc0JXSmpZSVpNbFVTcVFIbG1BT0F4dkZiUTJaRUltSkw0Zm1pNVRMMXdTZFgxZnZTZ1Rvbmwyb3BMb3hWZEdUClJ5aXBkVzgyYXZ6NStIbEhDM29vaURud3dOYzQzOWdKK2tqU1I5MGc2cS81bnlIZHJWUXhBMW0vUkp2blhGbTEKYjZ0TVhMeUIvV1lSTXZGRkJaTXlUL3Z6V2VmOTFMeEJqNmN1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc2h2akRIUzJmdDJuMXYxSkNqN2l0OE53NVYxK1psRHFIZzB2ZG40S0Y0MElDM01hCjk2WjBxRW9sVzRMTUVCMnMyWU1iS1NRMlNvZDlaZUJMR2o5UitEV0ZtMm9wWCtqWkxpQ1BrZWZ4a2RDdTZCOGMKWlNrTk5KN0ZqZ1lTVTRZeml3dURLMVVqQ0NvYUYwVnh5U25DMlJVRmJkME9aU3pYaGg4RGZ4a3BBNGpwK3pUNgorZG9qWmM5RCtxYWJFVWF2SEdDNUY0ODJZUGcvdlpHaVZHdnFpbTZxY3FQQWhESFd4eDk0R0pRemdNeEZjaTJrCmhwM2RYa25mR2tFOEFhMTZJalZiRDNBc3pmVGpqZ3I0Y0dhR0trRUx1Q05yZTZ5SGlPYmFUWklvS2FDRW44ODcKblRURHZsRW0xeCtxdEhwVWo4Skhjay83djdJdThIZEs3UThxQ3dJREFRQUJBb0lCQUFsSW10VVRZRS9NamVzTwoyTGZILzFsRXZxVzE4ZGl6YndDUi8xOVZ3b0Rud1B1WHpGZ01QUmhvaFBuNEgxclhzU0xGU3EwaVRoSWtiY3paCm5CQ0tMR09icHBNclBXemFYamVoU3RwNEZJZGRNVUM0SG1ySGNRREZKZGI1U2d0QWUzOUw0bEpuNWFPUFRqelkKU2M0S2R6V0pldmIzQnNFUFRVeVlZVDVHdVhTTm9BT2RQS284OERsYVlNNHZuZHdPWFUvdHJQaUpPMEt4VHhVNApmTkR0bXhuYWhKRERKakZ5eEplOHFPWDFkWjI5Q05Vd1lvRHp0ZWJKM2NNVXErUVU2ajVGTVJIQ2kyUXkzSVBzCi9NNHBEaGFqcGsxdTluNWJza0NuQlh2cWdNS1pzQy9KYzBLS042bVRUdTRBVm1RWVJPKzRTejFOYlFwL1JHU2gKaDN2L01RRUNnWUVBN0xqdEMrN0QxbnpyM1JKcXdyNGdRQXloZ1dVdTNhRTVyRDVMbWlWTExBb3lLQU9CUjRvVQp6bXhRb3NPd2I3UTFkNCtsMEI1VzJzTlk1cllpVVlaWVVWSHU0OWhpZVRQdTNGeXgwd1RzczlmVjhrN0VoRkJqCjZNUWJwK2FJR3VGTk12VDBucjdiNm8vNGQ4YSt4R1JBbGliK1htZVh4NWFVMGE4RHphQjliTHNDZ1lFQXdKMEUKS20rd01nOFFOSUVWSy92bXgrdU5GdHRIZXpwT1ZLZ1M2MHpzU0c4SFJRazhWS2theUFSaHE4U0drY3hqODMwZQpWYzVVNHFTTkcyU0p0YXFpbitHME9yMnRZL1ZJaGNqcXh3NjFkTkZqaU5manRHamZEbzRrRVRWSGRBVCtrNEZkCkZSTkxmbDRXR1JVNnpNMEhUa3d5QUpxT3FSTTFiY0FicGtDdGl2RUNnWUVBbU9NS3ZqVTBLSmcvNFdVZXJLNE0KdURFd01oaitmc2U5THVDQkJZcG1sWWYwUXVHWW9uS3M0M0VUVnp3Wi9Oc2YyUnRlbFI2eks5RVUzdFR0TDBnYwpURkVsZitSbUhTK01hcWczZFRsdUF1MDRVYW5MeEVVRGNmY09nWThqZ25EVzRqMVFyQ0pLZUtFSmNacGI1UTEyCnBVT0Q3OGJxUVU2Z3lSaEcxWXg4MVRjQ2dZQkl0cjRNMnk4MEpyV2liSnkyaHhsZm5kQWNzZGx4YnRpRll4SUoKWEhmUy9IOU5FNmgvK1hzUHlYK3AzYjVEcWxxTllFMmtiUWxrcW1STzFBeWMxWGNoVG83QW9qeWtBTVJKSlVsawpybXZZVnZmeGdEY0pNNUlKcDZWOERaWVUrWkcxMDk5MUJseTRyd0krbytJWDBNc1NSdmVWZk1PZ2xvelVDdk1sCk4wT01zUUtCZ1FDSHl0MyttS2RUc3crcExxVWxLVDd3bk1lMndHSmFEcEdmOUw5UVcrRG5weERVT3VGelB2aFcKbmkySEZBcWFuODFQMHhkUGs5K3VETlBnb1RCdFhQUXR0M2taZ0ZySDZIR2xTR1FVYnkrdUVvdEJpb0FqcmM4TQorRVo1bFB4V1FsbHpOZHBEQmwzN1U5d2p5MS9rZU5DcWN6ZTNmWHM3L2J3bW5IaHRZYWdxd0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-apiserver-cert
  namespace: default
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
  namespace: default
spec:
  ports:
  - name: operator
    port: 443
    targetPort: operator
  selector:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/name: kubedb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubedb
      app.kubernetes.io/name: kubedb
  template:
    metadata:
      annotations:
        checksum/apiregistration.yaml: 422802312f464be5d01b0c6f3fa3af8f2039c0ccd9b0f1e2463bf264eca4f290
      labels:
        app.kubernetes.io/instance: kubedb
        app.kubernetes.io/name: kubedb
    spec:
      containers:
      - args:
        - run
        - --v=3
        - --governing-service=kubedb
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-mutating-webhook=true
        - --enable-validating-webhook=true
        - --bypass-validating-webhook-xray=false
        - --use-kubeapiserver-fqdn-for-aks=true
        - --enable-analytics=true
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: kubedb/operator:v0.14.0-beta.1
        imagePullPolicy: IfNotPresent
        name: operator
        ports:
        - containerPort: 8443
          name: operator
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      nodeSelector:
        beta.kubernetes.io/arch: amd64
        beta.kubernetes.io/os: linux
      securityContext: {}
      serviceAccountName: kubedb
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: kubedb-apiserver-cert
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: v1alpha1.mutators.kubedb.com
spec:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQWM2Z0F3SUJBZ0lRRU5URHdiNU5sOFNsc282SGwzV2h0akFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURBNU1ETXdNVFV6TlRKYUZ3MHpNREE1TURFd01UVXpOVEphTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2aUdCCnRocDQrbFArVzZBM2RtR0xxTzBubU1sSnJWTVhOdUdpdFB3a1RvaHJ2bkc4Vmt6aW9IYnEyOVJLUTRVNlU4dXQKYVpzSUswdUlYQ2wwK3FJSGpNTDFneWFzeGFDNU90Y3VjQlg0bUJZcDVKRUV0SFNIMlJaZi9BYldTQ0E0ejIyNQpSK1ZGZzlHUGwrQ0ZHK2p6ZHFnUDJZNUl4UGRpKzNBdksvZWhsNnIrOUcyTzVGRDV0MFZJY0FmaTluTkdEK0wrCk8rbTk0eWxERC9XTmMrR29ha3ZHR3ZBNWpHSy9Rbkk2ZXlIZkNBYkpQQ3RjNU4yRkJnUWwreGo2WXBKYkJVdE8KRUErR01ETmJCZ2R2WUxVYmQvT1FCbjE3S2ZzWW1FbXdWN0JQZnJlOWwyN0FkdEpRZjAwVXVqYWJJemd5WDhlcwphRkVlYTVFbzJjeXRwaDNURlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUdaNDRYTjFkRFg3YTg2dFo2S2l4WHBNMVhqSkI3aFFXWGJHMHdwKzdGRncyK2xyU3JZbAppWDBhQjU1dTRrM0ZxbE9uUGQ2WVJtSEw3b1plT210TWpmdE5jSlIzMFZDd1hNa1hENDlwbjlybjBHaytMN3dvClVobkpXMlFsZnp1Y0pGNDdEUDM0ejR1K3dITS9yV084NEc4clRlU1p2V2Q1UjRNQzlNeXFWd0xmSCt0ZCtpaGoKdkdSUm80SUd5eFRkR1doYXdYVzJCdzBmeE4vTlVBOElNZXdRVndKMmt3MC9yZWJ6YmpwNHhzYUFmczR5eWxkZQpEb1RTOG5EaHd3UFF3MllyUXNjbWdRaDhyQko2YnpQa29uWlV3TnJTbUpUb3pSczlIblVUbFBiWlBkdEh6UHJ2CmpxT3g4NFhkSFEyZWV5azJJaWlKWTA4N1NTd0oxZzNzSlE0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  group: mutators.kubedb.com
  groupPriorityMinimum: 10000
  service:
    name: kubedb
    namespace: default
  version: v1alpha1
  versionPriority: 15
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: v1alpha1.validators.kubedb.com
spec:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1akNDQWM2Z0F3SUJBZ0lRRU5URHdiNU5sOFNsc282SGwzV2h0akFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TURBNU1ETXdNVFV6TlRKYUZ3MHpNREE1TURFd01UVXpOVEphTUEweApDekFKQmdOVkJBTVRBbU5oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2aUdCCnRocDQrbFArVzZBM2RtR0xxTzBubU1sSnJWTVhOdUdpdFB3a1RvaHJ2bkc4Vmt6aW9IYnEyOVJLUTRVNlU4dXQKYVpzSUswdUlYQ2wwK3FJSGpNTDFneWFzeGFDNU90Y3VjQlg0bUJZcDVKRUV0SFNIMlJaZi9BYldTQ0E0ejIyNQpSK1ZGZzlHUGwrQ0ZHK2p6ZHFnUDJZNUl4UGRpKzNBdksvZWhsNnIrOUcyTzVGRDV0MFZJY0FmaTluTkdEK0wrCk8rbTk0eWxERC9XTmMrR29ha3ZHR3ZBNWpHSy9Rbkk2ZXlIZkNBYkpQQ3RjNU4yRkJnUWwreGo2WXBKYkJVdE8KRUErR01ETmJCZ2R2WUxVYmQvT1FCbjE3S2ZzWW1FbXdWN0JQZnJlOWwyN0FkdEpRZjAwVXVqYWJJemd5WDhlcwphRkVlYTVFbzJjeXRwaDNURlFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3SFFZRFZSMGxCQll3CkZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUdaNDRYTjFkRFg3YTg2dFo2S2l4WHBNMVhqSkI3aFFXWGJHMHdwKzdGRncyK2xyU3JZbAppWDBhQjU1dTRrM0ZxbE9uUGQ2WVJtSEw3b1plT210TWpmdE5jSlIzMFZDd1hNa1hENDlwbjlybjBHaytMN3dvClVobkpXMlFsZnp1Y0pGNDdEUDM0ejR1K3dITS9yV084NEc4clRlU1p2V2Q1UjRNQzlNeXFWd0xmSCt0ZCtpaGoKdkdSUm80SUd5eFRkR1doYXdYVzJCdzBmeE4vTlVBOElNZXdRVndKMmt3MC9yZWJ6YmpwNHhzYUFmczR5eWxkZQpEb1RTOG5EaHd3UFF3MllyUXNjbWdRaDhyQko2YnpQa29uWlV3TnJTbUpUb3pSczlIblVUbFBiWlBkdEh6UHJ2CmpxT3g4NFhkSFEyZWV5azJJaWlKWTA4N1NTd0oxZzNzSlE0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  group: validators.kubedb.com
  groupPriorityMinimum: 10000
  service:
    name: kubedb
    namespace: default
  version: v1alpha1
  versionPriority: 15
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb-cleaner
  namespace: default
spec:
  activeDeadlineSeconds: 120
  backoffLimit: 3
  template:
    spec:
      containers:
      - command:
        - sh
        - -c
        - sleep 2; kubectl delete validatingwebhookconfigurations validators.kubedb.com || true; kubectl delete mutatingwebhookconfiguration mutators.kubedb.com || true; kubectl delete apiservice v1alpha1.mutators.kubedb.com || true; kubectl delete apiservice v1alpha1.validators.kubedb.com || true;
        image: appscode/kubectl:v1.16
        imagePullPolicy: IfNotPresent
        name: busybox
      restartPolicy: Never
      serviceAccountName: kubedb
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    app.kubernetes.io/instance: kubedb
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: kubedb
    app.kubernetes.io/version: v0.14.0-beta.1
    helm.sh/chart: kubedb-v0.14.0-beta.1
  name: kubedb
spec:
  allowPrivilegeEscalation: true
  allowedCapabilities:
  - IPC_LOCK
  - SYS_RESOURCE
  fsGroup:
    rule: RunAsAny
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
